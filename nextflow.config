params {

    // biobakery databases
    uniref                      = "uniref90_diamond"
    chocophlan                  = "full"
    metaphlan_index             = "latest"

    // CMGD version
    cmgd_version = '4'

    // google
    publish_dir = "gs://cmgd-data/results/cMDv${params.cmgd_version}"
}

manifest {
    author = 'Sean Davis<seandavi@gmail.com>'
    defaultBranch = 'main'
    description = 'Curated Metagenomic Data pipeline'
    homePage = 'https://github.com/seandavi/curatedmetagenomicsnextflow'
    mainScript = 'main.nf'
    name = 'cmgd_nextflow'
    version = '1.1.0'

    // nextflowVersion
    // doi
    // recurseSubmodules
}

report {
    enabled = true
}

timeline {
    enabled = true
}

trace {
    enabled = true
    raw = true // no "GB", etc. Just numbers
    file = 'pipeline_trace.txt'
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,env,script,hostname,error_action'
}

weblog {
    enabled = true
    // url = 'https://cmgd-telemetry-whnnxetv4q-uc.a.run.app/webhook'
    // supply on command line using -with-weblog=url
    url = 'https://nf-telemetry-819875667022.us-central1.run.app/nextflow-telemetry/events'
}

singularity.enabled = true
trace.overwrite = true


profiles {
    local {
    }

    anvil {
        process.errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' } 
        process.maxRetries = 3
        workDir = 'work'
	params.store_dir = '/anvil/scratch/x-seandavi/keep/store/'
        // process.executor = 'slurm'
        process.container = 'docker://seandavi/curatedmetagenomics:metaphlan4.1.0'
    }
    alpine {
        process.errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' } 
        process.maxRetries = 3
        workDir = 'work'
        params.store_dir = '/home/seandavi@xsede.org/scratch/curatedMetagenomicsNextflow/keep/store/'
        // process.executor = 'slurm'
        process.container = 'docker://seandavi/curatedmetagenomics:metaphlan4.1.0'
    }
    google {
        process.executor = 'google-batch'
        process.container = 'seandavi/curatedmetagenomics:metaphlan4.1.0'
        workDir = 'gs://cmgd-data/work'
        process.maxRetries = 3
        google.batch.bootDiskSize = '100.GB'
        google.batch.spot = true
        process.errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' }
        google.project = 'omicidx-338300'
    }
}
